{"version":3,"file":"js/443.db4ad7a8034dae72a3c4.js","mappings":"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","sources":["webpack:///./node_modules/alpinejs/dist/alpine.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Alpine = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  // Thanks @stimulus:\n  // https://github.com/stimulusjs/stimulus/blob/master/packages/%40stimulus/core/src/application.ts\n  function domReady() {\n    return new Promise(resolve => {\n      if (document.readyState == \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", resolve);\n      } else {\n        resolve();\n      }\n    });\n  }\n  function arrayUnique(array) {\n    return Array.from(new Set(array));\n  }\n  function isTesting() {\n    return navigator.userAgent.includes(\"Node.js\") || navigator.userAgent.includes(\"jsdom\");\n  }\n  function checkedAttrLooseCompare(valueA, valueB) {\n    return valueA == valueB;\n  }\n  function warnIfMalformedTemplate(el, directive) {\n    if (el.tagName.toLowerCase() !== 'template') {\n      console.warn(`Alpine: [${directive}] directive should only be added to <template> tags. See https://github.com/alpinejs/alpine#${directive}`);\n    } else if (el.content.childElementCount !== 1) {\n      console.warn(`Alpine: <template> tag with [${directive}] encountered with an unexpected number of root elements. Make sure <template> has a single root element. `);\n    }\n  }\n  function kebabCase(subject) {\n    return subject.replace(/([a-z])([A-Z])/g, '$1-$2').replace(/[_\\s]/, '-').toLowerCase();\n  }\n  function camelCase(subject) {\n    return subject.toLowerCase().replace(/-(\\w)/g, (match, char) => char.toUpperCase());\n  }\n  function walk(el, callback) {\n    if (callback(el) === false) return;\n    let node = el.firstElementChild;\n\n    while (node) {\n      walk(node, callback);\n      node = node.nextElementSibling;\n    }\n  }\n  function debounce(func, wait) {\n    var timeout;\n    return function () {\n      var context = this,\n          args = arguments;\n\n      var later = function later() {\n        timeout = null;\n        func.apply(context, args);\n      };\n\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n    };\n  }\n\n  const handleError = (el, expression, error) => {\n    console.warn(`Alpine Error: \"${error}\"\\n\\nExpression: \"${expression}\"\\nElement:`, el);\n\n    if (!isTesting()) {\n      Object.assign(error, {\n        el,\n        expression\n      });\n      throw error;\n    }\n  };\n\n  function tryCatch(cb, {\n    el,\n    expression\n  }) {\n    try {\n      const value = cb();\n      return value instanceof Promise ? value.catch(e => handleError(el, expression, e)) : value;\n    } catch (e) {\n      handleError(el, expression, e);\n    }\n  }\n\n  function saferEval(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return expression.call(dataContext);\n      }\n\n      return new Function(['$data', ...Object.keys(additionalHelperVariables)], `var __alpine_result; with($data) { __alpine_result = ${expression} }; return __alpine_result`)(dataContext, ...Object.values(additionalHelperVariables));\n    }, {\n      el,\n      expression\n    });\n  }\n  function saferEvalNoReturn(el, expression, dataContext, additionalHelperVariables = {}) {\n    return tryCatch(() => {\n      if (typeof expression === 'function') {\n        return Promise.resolve(expression.call(dataContext, additionalHelperVariables['$event']));\n      }\n\n      let AsyncFunction = Function;\n      /* MODERN-ONLY:START */\n\n      AsyncFunction = Object.getPrototypeOf(async function () {}).constructor;\n      /* MODERN-ONLY:END */\n      // For the cases when users pass only a function reference to the caller: `x-on:click=\"foo\"`\n      // Where \"foo\" is a function. Also, we'll pass the function the event instance when we call it.\n\n      if (Object.keys(dataContext).includes(expression)) {\n        let methodReference = new Function(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { return ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables));\n\n        if (typeof methodReference === 'function') {\n          return Promise.resolve(methodReference.call(dataContext, additionalHelperVariables['$event']));\n        } else {\n          return Promise.resolve();\n        }\n      }\n\n      return Promise.resolve(new AsyncFunction(['dataContext', ...Object.keys(additionalHelperVariables)], `with(dataContext) { ${expression} }`)(dataContext, ...Object.values(additionalHelperVariables)));\n    }, {\n      el,\n      expression\n    });\n  }\n  const xAttrRE = /^x-(on|bind|data|text|html|model|if|for|show|cloak|transition|ref|spread)\\b/;\n  function isXAttr(attr) {\n    const name = replaceAtAndColonWithStandardSyntax(attr.name);\n    return xAttrRE.test(name);\n  }\n  function getXAttrs(el, component, type) {\n    let directives = Array.from(el.attributes).filter(isXAttr).map(parseHtmlAttribute); // Get an object of directives from x-spread.\n\n    let spreadDirective = directives.filter(directive => directive.type === 'spread')[0];\n\n    if (spreadDirective) {\n      let spreadObject = saferEval(el, spreadDirective.expression, component.$data); // Add x-spread directives to the pile of existing directives.\n\n      directives = directives.concat(Object.entries(spreadObject).map(([name, value]) => parseHtmlAttribute({\n        name,\n        value\n      })));\n    }\n\n    if (type) return directives.filter(i => i.type === type);\n    return sortDirectives(directives);\n  }\n\n  function sortDirectives(directives) {\n    let directiveOrder = ['bind', 'model', 'show', 'catch-all'];\n    return directives.sort((a, b) => {\n      let typeA = directiveOrder.indexOf(a.type) === -1 ? 'catch-all' : a.type;\n      let typeB = directiveOrder.indexOf(b.type) === -1 ? 'catch-all' : b.type;\n      return directiveOrder.indexOf(typeA) - directiveOrder.indexOf(typeB);\n    });\n  }\n\n  function parseHtmlAttribute({\n    name,\n    value\n  }) {\n    const normalizedName = replaceAtAndColonWithStandardSyntax(name);\n    const typeMatch = normalizedName.match(xAttrRE);\n    const valueMatch = normalizedName.match(/:([a-zA-Z0-9\\-:]+)/);\n    const modifiers = normalizedName.match(/\\.[^.\\]]+(?=[^\\]]*$)/g) || [];\n    return {\n      type: typeMatch ? typeMatch[1] : null,\n      value: valueMatch ? valueMatch[1] : null,\n      modifiers: modifiers.map(i => i.replace('.', '')),\n      expression: value\n    };\n  }\n  function isBooleanAttr(attrName) {\n    // As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\n    // Array roughly ordered by estimated usage\n    const booleanAttributes = ['disabled', 'checked', 'required', 'readonly', 'hidden', 'open', 'selected', 'autofocus', 'itemscope', 'multiple', 'novalidate', 'allowfullscreen', 'allowpaymentrequest', 'formnovalidate', 'autoplay', 'controls', 'loop', 'muted', 'playsinline', 'default', 'ismap', 'reversed', 'async', 'defer', 'nomodule'];\n    return booleanAttributes.includes(attrName);\n  }\n  function replaceAtAndColonWithStandardSyntax(name) {\n    if (name.startsWith('@')) {\n      return name.replace('@', 'x-on:');\n    } else if (name.startsWith(':')) {\n      return name.replace(':', 'x-bind:');\n    }\n\n    return name;\n  }\n  function convertClassStringToArray(classList, filterFn = Boolean) {\n    return classList.split(' ').filter(filterFn);\n  }\n  const TRANSITION_TYPE_IN = 'in';\n  const TRANSITION_TYPE_OUT = 'out';\n  const TRANSITION_CANCELLED = 'cancelled';\n  function transitionIn(el, show, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return show();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_IN) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0]; // If this is triggered by a x-show.transition.\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers; // If x-show.transition.out, we'll skip the \"in\" transition.\n\n      if (modifiers.includes('out') && !modifiers.includes('in')) return show();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out'); // If x-show.transition.in...out... only use \"in\" related modifiers for this transition.\n\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index < modifiers.indexOf('out')) : modifiers;\n      transitionHelperIn(el, modifiers, show, reject); // Otherwise, we can assume x-transition:enter.\n    } else if (attrs.some(attr => ['enter', 'enter-start', 'enter-end'].includes(attr.value))) {\n      transitionClassesIn(el, component, attrs, show, reject);\n    } else {\n      // If neither, just show that damn thing.\n      show();\n    }\n  }\n  function transitionOut(el, hide, reject, component, forceSkip = false) {\n    // We don't want to transition on the initial page load.\n    if (forceSkip) return hide();\n\n    if (el.__x_transition && el.__x_transition.type === TRANSITION_TYPE_OUT) {\n      // there is already a similar transition going on, this was probably triggered by\n      // a change in a different property, let's just leave the previous one doing its job\n      return;\n    }\n\n    const attrs = getXAttrs(el, component, 'transition');\n    const showAttr = getXAttrs(el, component, 'show')[0];\n\n    if (showAttr && showAttr.modifiers.includes('transition')) {\n      let modifiers = showAttr.modifiers;\n      if (modifiers.includes('in') && !modifiers.includes('out')) return hide();\n      const settingBothSidesOfTransition = modifiers.includes('in') && modifiers.includes('out');\n      modifiers = settingBothSidesOfTransition ? modifiers.filter((i, index) => index > modifiers.indexOf('out')) : modifiers;\n      transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hide, reject);\n    } else if (attrs.some(attr => ['leave', 'leave-start', 'leave-end'].includes(attr.value))) {\n      transitionClassesOut(el, component, attrs, hide, reject);\n    } else {\n      hide();\n    }\n  }\n  function transitionHelperIn(el, modifiers, showCallback, reject) {\n    // Default values inspired by: https://material.io/design/motion/speed.html#duration\n    const styleValues = {\n      duration: modifierValue(modifiers, 'duration', 150),\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      },\n      second: {\n        opacity: 1,\n        scale: 100\n      }\n    };\n    transitionHelper(el, modifiers, showCallback, () => {}, reject, styleValues, TRANSITION_TYPE_IN);\n  }\n  function transitionHelperOut(el, modifiers, settingBothSidesOfTransition, hideCallback, reject) {\n    // Make the \"out\" transition .5x slower than the \"in\". (Visually better)\n    // HOWEVER, if they explicitly set a duration for the \"out\" transition,\n    // use that.\n    const duration = settingBothSidesOfTransition ? modifierValue(modifiers, 'duration', 150) : modifierValue(modifiers, 'duration', 150) / 2;\n    const styleValues = {\n      duration: duration,\n      origin: modifierValue(modifiers, 'origin', 'center'),\n      first: {\n        opacity: 1,\n        scale: 100\n      },\n      second: {\n        opacity: 0,\n        scale: modifierValue(modifiers, 'scale', 95)\n      }\n    };\n    transitionHelper(el, modifiers, () => {}, hideCallback, reject, styleValues, TRANSITION_TYPE_OUT);\n  }\n\n  function modifierValue(modifiers, key, fallback) {\n    // If the modifier isn't present, use the default.\n    if (modifiers.indexOf(key) === -1) return fallback; // If it IS present, grab the value after it: x-show.transition.duration.500ms\n\n    const rawValue = modifiers[modifiers.indexOf(key) + 1];\n    if (!rawValue) return fallback;\n\n    if (key === 'scale') {\n      // Check if the very next value is NOT a number and return the fallback.\n      // If x-show.transition.scale, we'll use the default scale value.\n      // That is how a user opts out of the opacity transition.\n      if (!isNumeric(rawValue)) return fallback;\n    }\n\n    if (key === 'duration') {\n      // Support x-show.transition.duration.500ms && duration.500\n      let match = rawValue.match(/([0-9]+)ms/);\n      if (match) return match[1];\n    }\n\n    if (key === 'origin') {\n      // Support chaining origin directions: x-show.transition.top.right\n      if (['top', 'right', 'left', 'center', 'bottom'].includes(modifiers[modifiers.indexOf(key) + 2])) {\n        return [rawValue, modifiers[modifiers.indexOf(key) + 2]].join(' ');\n      }\n    }\n\n    return rawValue;\n  }\n\n  function transitionHelper(el, modifiers, hook1, hook2, reject, styleValues, type) {\n    // clear the previous transition if exists to avoid caching the wrong styles\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    } // If the user set these style values, we'll put them back when we're done with them.\n\n\n    const opacityCache = el.style.opacity;\n    const transformCache = el.style.transform;\n    const transformOriginCache = el.style.transformOrigin; // If no modifiers are present: x-show.transition, we'll default to both opacity and scale.\n\n    const noModifiers = !modifiers.includes('opacity') && !modifiers.includes('scale');\n    const transitionOpacity = noModifiers || modifiers.includes('opacity');\n    const transitionScale = noModifiers || modifiers.includes('scale'); // These are the explicit stages of a transition (same stages for in and for out).\n    // This way you can get a birds eye view of the hooks, and the differences\n    // between them.\n\n    const stages = {\n      start() {\n        if (transitionOpacity) el.style.opacity = styleValues.first.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.first.scale / 100})`;\n      },\n\n      during() {\n        if (transitionScale) el.style.transformOrigin = styleValues.origin;\n        el.style.transitionProperty = [transitionOpacity ? `opacity` : ``, transitionScale ? `transform` : ``].join(' ').trim();\n        el.style.transitionDuration = `${styleValues.duration / 1000}s`;\n        el.style.transitionTimingFunction = `cubic-bezier(0.4, 0.0, 0.2, 1)`;\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        if (transitionOpacity) el.style.opacity = styleValues.second.opacity;\n        if (transitionScale) el.style.transform = `scale(${styleValues.second.scale / 100})`;\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        if (transitionOpacity) el.style.opacity = opacityCache;\n        if (transitionScale) el.style.transform = transformCache;\n        if (transitionScale) el.style.transformOrigin = transformOriginCache;\n        el.style.transitionProperty = null;\n        el.style.transitionDuration = null;\n        el.style.transitionTimingFunction = null;\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n\n  const ensureStringExpression = (expression, el, component) => {\n    return typeof expression === 'function' ? component.evaluateReturnExpression(el, expression) : expression;\n  };\n\n  function transitionClassesIn(el, component, directives, showCallback, reject) {\n    const enter = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter') || {\n      expression: ''\n    }).expression, el, component));\n    const enterStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-start') || {\n      expression: ''\n    }).expression, el, component));\n    const enterEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'enter-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, enter, enterStart, enterEnd, showCallback, () => {}, TRANSITION_TYPE_IN, reject);\n  }\n  function transitionClassesOut(el, component, directives, hideCallback, reject) {\n    const leave = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveStart = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-start') || {\n      expression: ''\n    }).expression, el, component));\n    const leaveEnd = convertClassStringToArray(ensureStringExpression((directives.find(i => i.value === 'leave-end') || {\n      expression: ''\n    }).expression, el, component));\n    transitionClasses(el, leave, leaveStart, leaveEnd, () => {}, hideCallback, TRANSITION_TYPE_OUT, reject);\n  }\n  function transitionClasses(el, classesDuring, classesStart, classesEnd, hook1, hook2, type, reject) {\n    // clear the previous transition if exists to avoid caching the wrong classes\n    if (el.__x_transition) {\n      el.__x_transition.cancel && el.__x_transition.cancel();\n    }\n\n    const originalClasses = el.__x_original_classes || [];\n    const stages = {\n      start() {\n        el.classList.add(...classesStart);\n      },\n\n      during() {\n        el.classList.add(...classesDuring);\n      },\n\n      show() {\n        hook1();\n      },\n\n      end() {\n        // Don't remove classes that were in the original class attribute.\n        el.classList.remove(...classesStart.filter(i => !originalClasses.includes(i)));\n        el.classList.add(...classesEnd);\n      },\n\n      hide() {\n        hook2();\n      },\n\n      cleanup() {\n        el.classList.remove(...classesDuring.filter(i => !originalClasses.includes(i)));\n        el.classList.remove(...classesEnd.filter(i => !originalClasses.includes(i)));\n      }\n\n    };\n    transition(el, stages, type, reject);\n  }\n  function transition(el, stages, type, reject) {\n    const finish = once(() => {\n      stages.hide(); // Adding an \"isConnected\" check, in case the callback\n      // removed the element from the DOM.\n\n      if (el.isConnected) {\n        stages.cleanup();\n      }\n\n      delete el.__x_transition;\n    });\n    el.__x_transition = {\n      // Set transition type so we can avoid clearing transition if the direction is the same\n      type: type,\n      // create a callback for the last stages of the transition so we can call it\n      // from different point and early terminate it. Once will ensure that function\n      // is only called one time.\n      cancel: once(() => {\n        reject(TRANSITION_CANCELLED);\n        finish();\n      }),\n      finish,\n      // This store the next animation frame so we can cancel it\n      nextFrame: null\n    };\n    stages.start();\n    stages.during();\n    el.__x_transition.nextFrame = requestAnimationFrame(() => {\n      // Note: Safari's transitionDuration property will list out comma separated transition durations\n      // for every single transition property. Let's grab the first one and call it a day.\n      let duration = Number(getComputedStyle(el).transitionDuration.replace(/,.*/, '').replace('s', '')) * 1000;\n\n      if (duration === 0) {\n        duration = Number(getComputedStyle(el).animationDuration.replace('s', '')) * 1000;\n      }\n\n      stages.show();\n      el.__x_transition.nextFrame = requestAnimationFrame(() => {\n        stages.end();\n        setTimeout(el.__x_transition.finish, duration);\n      });\n    });\n  }\n  function isNumeric(subject) {\n    return !Array.isArray(subject) && !isNaN(subject);\n  } // Thanks @vuejs\n  // https://github.com/vuejs/vue/blob/4de4649d9637262a9b007720b59f80ac72a5620c/src/shared/util.js\n\n  function once(callback) {\n    let called = false;\n    return function () {\n      if (!called) {\n        called = true;\n        callback.apply(this, arguments);\n      }\n    };\n  }\n\n  function handleForDirective(component, templateEl, expression, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(templateEl, 'x-for');\n    let iteratorNames = typeof expression === 'function' ? parseForExpression(component.evaluateReturnExpression(templateEl, expression)) : parseForExpression(expression);\n    let items = evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, templateEl, iteratorNames, extraVars); // As we walk the array, we'll also walk the DOM (updating/creating as we go).\n\n    let currentEl = templateEl;\n    items.forEach((item, index) => {\n      let iterationScopeVariables = getIterationScopeVariables(iteratorNames, item, index, items, extraVars());\n      let currentKey = generateKeyForIteration(component, templateEl, index, iterationScopeVariables);\n      let nextEl = lookAheadForMatchingKeyedElementAndMoveItIfFound(currentEl.nextElementSibling, currentKey); // If we haven't found a matching key, insert the element at the current position.\n\n      if (!nextEl) {\n        nextEl = addElementInLoopAfterCurrentEl(templateEl, currentEl); // And transition it in if it's not the first page load.\n\n        transitionIn(nextEl, () => {}, () => {}, component, initialUpdate);\n        nextEl.__x_for = iterationScopeVariables;\n        component.initializeElements(nextEl, () => nextEl.__x_for); // Otherwise update the element we found.\n      } else {\n        // Temporarily remove the key indicator to allow the normal \"updateElements\" to work.\n        delete nextEl.__x_for_key;\n        nextEl.__x_for = iterationScopeVariables;\n        component.updateElements(nextEl, () => nextEl.__x_for);\n      }\n\n      currentEl = nextEl;\n      currentEl.__x_for_key = currentKey;\n    });\n    removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component);\n  } // This was taken from VueJS 2.* core. Thanks Vue!\n\n  function parseForExpression(expression) {\n    let forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\n    let stripParensRE = /^\\(|\\)$/g;\n    let forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\n    let inMatch = String(expression).match(forAliasRE);\n    if (!inMatch) return;\n    let res = {};\n    res.items = inMatch[2].trim();\n    let item = inMatch[1].trim().replace(stripParensRE, '');\n    let iteratorMatch = item.match(forIteratorRE);\n\n    if (iteratorMatch) {\n      res.item = item.replace(forIteratorRE, '').trim();\n      res.index = iteratorMatch[1].trim();\n\n      if (iteratorMatch[2]) {\n        res.collection = iteratorMatch[2].trim();\n      }\n    } else {\n      res.item = item;\n    }\n\n    return res;\n  }\n\n  function getIterationScopeVariables(iteratorNames, item, index, items, extraVars) {\n    // We must create a new object, so each iteration has a new scope\n    let scopeVariables = extraVars ? _objectSpread2({}, extraVars) : {};\n    scopeVariables[iteratorNames.item] = item;\n    if (iteratorNames.index) scopeVariables[iteratorNames.index] = index;\n    if (iteratorNames.collection) scopeVariables[iteratorNames.collection] = items;\n    return scopeVariables;\n  }\n\n  function generateKeyForIteration(component, el, index, iterationScopeVariables) {\n    let bindKeyAttribute = getXAttrs(el, component, 'bind').filter(attr => attr.value === 'key')[0]; // If the dev hasn't specified a key, just return the index of the iteration.\n\n    if (!bindKeyAttribute) return index;\n    return component.evaluateReturnExpression(el, bindKeyAttribute.expression, () => iterationScopeVariables);\n  }\n\n  function evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement(component, el, iteratorNames, extraVars) {\n    let ifAttribute = getXAttrs(el, component, 'if')[0];\n\n    if (ifAttribute && !component.evaluateReturnExpression(el, ifAttribute.expression)) {\n      return [];\n    }\n\n    let items = component.evaluateReturnExpression(el, iteratorNames.items, extraVars); // This adds support for the `i in n` syntax.\n\n    if (isNumeric(items) && items >= 0) {\n      items = Array.from(Array(items).keys(), i => i + 1);\n    }\n\n    return items;\n  }\n\n  function addElementInLoopAfterCurrentEl(templateEl, currentEl) {\n    let clone = document.importNode(templateEl.content, true);\n    currentEl.parentElement.insertBefore(clone, currentEl.nextElementSibling);\n    return currentEl.nextElementSibling;\n  }\n\n  function lookAheadForMatchingKeyedElementAndMoveItIfFound(nextEl, currentKey) {\n    if (!nextEl) return; // If we are already past the x-for generated elements, we don't need to look ahead.\n\n    if (nextEl.__x_for_key === undefined) return; // If the the key's DO match, no need to look ahead.\n\n    if (nextEl.__x_for_key === currentKey) return nextEl; // If they don't, we'll look ahead for a match.\n    // If we find it, we'll move it to the current position in the loop.\n\n    let tmpNextEl = nextEl;\n\n    while (tmpNextEl) {\n      if (tmpNextEl.__x_for_key === currentKey) {\n        return tmpNextEl.parentElement.insertBefore(tmpNextEl, nextEl);\n      }\n\n      tmpNextEl = tmpNextEl.nextElementSibling && tmpNextEl.nextElementSibling.__x_for_key !== undefined ? tmpNextEl.nextElementSibling : false;\n    }\n  }\n\n  function removeAnyLeftOverElementsFromPreviousUpdate(currentEl, component) {\n    var nextElementFromOldLoop = currentEl.nextElementSibling && currentEl.nextElementSibling.__x_for_key !== undefined ? currentEl.nextElementSibling : false;\n\n    while (nextElementFromOldLoop) {\n      let nextElementFromOldLoopImmutable = nextElementFromOldLoop;\n      let nextSibling = nextElementFromOldLoop.nextElementSibling;\n      transitionOut(nextElementFromOldLoop, () => {\n        nextElementFromOldLoopImmutable.remove();\n      }, () => {}, component);\n      nextElementFromOldLoop = nextSibling && nextSibling.__x_for_key !== undefined ? nextSibling : false;\n    }\n  }\n\n  function handleAttributeBindingDirective(component, el, attrName, expression, extraVars, attrType, modifiers) {\n    var value = component.evaluateReturnExpression(el, expression, extraVars);\n\n    if (attrName === 'value') {\n      if (Alpine.ignoreFocusedForValueBinding && document.activeElement.isSameNode(el)) return; // If nested model key is undefined, set the default value to empty string.\n\n      if (value === undefined && String(expression).match(/\\./)) {\n        value = '';\n      }\n\n      if (el.type === 'radio') {\n        // Set radio value from x-bind:value, if no \"value\" attribute exists.\n        // If there are any initial state values, radio will have a correct\n        // \"checked\" value since x-bind:value is processed before x-model.\n        if (el.attributes.value === undefined && attrType === 'bind') {\n          el.value = value;\n        } else if (attrType !== 'bind') {\n          el.checked = checkedAttrLooseCompare(el.value, value);\n        }\n      } else if (el.type === 'checkbox') {\n        // If we are explicitly binding a string to the :value, set the string,\n        // If the value is a boolean, leave it alone, it will be set to \"on\"\n        // automatically.\n        if (typeof value !== 'boolean' && ![null, undefined].includes(value) && attrType === 'bind') {\n          el.value = String(value);\n        } else if (attrType !== 'bind') {\n          if (Array.isArray(value)) {\n            // I'm purposely not using Array.includes here because it's\n            // strict, and because of Numeric/String mis-casting, I\n            // want the \"includes\" to be \"fuzzy\".\n            el.checked = value.some(val => checkedAttrLooseCompare(val, el.value));\n          } else {\n            el.checked = !!value;\n          }\n        }\n      } else if (el.tagName === 'SELECT') {\n        updateSelect(el, value);\n      } else {\n        if (el.value === value) return;\n        el.value = value;\n      }\n    } else if (attrName === 'class') {\n      if (Array.isArray(value)) {\n        const originalClasses = el.__x_original_classes || [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(value)).join(' '));\n      } else if (typeof value === 'object') {\n        // Sorting the keys / class names by their boolean value will ensure that\n        // anything that evaluates to `false` and needs to remove classes is run first.\n        const keysSortedByBooleanValue = Object.keys(value).sort((a, b) => value[a] - value[b]);\n        keysSortedByBooleanValue.forEach(classNames => {\n          if (value[classNames]) {\n            convertClassStringToArray(classNames).forEach(className => el.classList.add(className));\n          } else {\n            convertClassStringToArray(classNames).forEach(className => el.classList.remove(className));\n          }\n        });\n      } else {\n        const originalClasses = el.__x_original_classes || [];\n        const newClasses = value ? convertClassStringToArray(value) : [];\n        el.setAttribute('class', arrayUnique(originalClasses.concat(newClasses)).join(' '));\n      }\n    } else {\n      attrName = modifiers.includes('camel') ? camelCase(attrName) : attrName; // If an attribute's bound value is null, undefined or false, remove the attribute\n\n      if ([null, undefined, false].includes(value)) {\n        el.removeAttribute(attrName);\n      } else {\n        isBooleanAttr(attrName) ? setIfChanged(el, attrName, attrName) : setIfChanged(el, attrName, value);\n      }\n    }\n  }\n\n  function setIfChanged(el, attrName, value) {\n    if (el.getAttribute(attrName) != value) {\n      el.setAttribute(attrName, value);\n    }\n  }\n\n  function updateSelect(el, value) {\n    const arrayWrappedValue = [].concat(value).map(value => {\n      return value + '';\n    });\n    Array.from(el.options).forEach(option => {\n      option.selected = arrayWrappedValue.includes(option.value || option.text);\n    });\n  }\n\n  function handleTextDirective(el, output, expression) {\n    // If nested model key is undefined, set the default value to empty string.\n    if (output === undefined && String(expression).match(/\\./)) {\n      output = '';\n    }\n\n    el.textContent = output;\n  }\n\n  function handleHtmlDirective(component, el, expression, extraVars) {\n    el.innerHTML = component.evaluateReturnExpression(el, expression, extraVars);\n  }\n\n  function handleShowDirective(component, el, value, modifiers, initialUpdate = false) {\n    const hide = () => {\n      el.style.display = 'none';\n      el.__x_is_shown = false;\n    };\n\n    const show = () => {\n      if (el.style.length === 1 && el.style.display === 'none') {\n        el.removeAttribute('style');\n      } else {\n        el.style.removeProperty('display');\n      }\n\n      el.__x_is_shown = true;\n    };\n\n    if (initialUpdate === true) {\n      if (value) {\n        show();\n      } else {\n        hide();\n      }\n\n      return;\n    }\n\n    const handle = (resolve, reject) => {\n      if (value) {\n        if (el.style.display === 'none' || el.__x_transition) {\n          transitionIn(el, () => {\n            show();\n          }, reject, component);\n        }\n\n        resolve(() => {});\n      } else {\n        if (el.style.display !== 'none') {\n          transitionOut(el, () => {\n            resolve(() => {\n              hide();\n            });\n          }, reject, component);\n        } else {\n          resolve(() => {});\n        }\n      }\n    }; // The working of x-show is a bit complex because we need to\n    // wait for any child transitions to finish before hiding\n    // some element. Also, this has to be done recursively.\n    // If x-show.immediate, foregoe the waiting.\n\n\n    if (modifiers.includes('immediate')) {\n      handle(finish => finish(), () => {});\n      return;\n    } // x-show is encountered during a DOM tree walk. If an element\n    // we encounter is NOT a child of another x-show element we\n    // can execute the previous x-show stack (if one exists).\n\n\n    if (component.showDirectiveLastElement && !component.showDirectiveLastElement.contains(el)) {\n      component.executeAndClearRemainingShowDirectiveStack();\n    }\n\n    component.showDirectiveStack.push(handle);\n    component.showDirectiveLastElement = el;\n  }\n\n  function handleIfDirective(component, el, expressionResult, initialUpdate, extraVars) {\n    warnIfMalformedTemplate(el, 'x-if');\n    const elementHasAlreadyBeenAdded = el.nextElementSibling && el.nextElementSibling.__x_inserted_me === true;\n\n    if (expressionResult && (!elementHasAlreadyBeenAdded || el.__x_transition)) {\n      const clone = document.importNode(el.content, true);\n      el.parentElement.insertBefore(clone, el.nextElementSibling);\n      transitionIn(el.nextElementSibling, () => {}, () => {}, component, initialUpdate);\n      component.initializeElements(el.nextElementSibling, extraVars);\n      el.nextElementSibling.__x_inserted_me = true;\n    } else if (!expressionResult && elementHasAlreadyBeenAdded) {\n      transitionOut(el.nextElementSibling, () => {\n        el.nextElementSibling.remove();\n      }, () => {}, component, initialUpdate);\n    }\n  }\n\n  function registerListener(component, el, event, modifiers, expression, extraVars = {}) {\n    const options = {\n      passive: modifiers.includes('passive')\n    };\n\n    if (modifiers.includes('camel')) {\n      event = camelCase(event);\n    }\n\n    let handler, listenerTarget;\n\n    if (modifiers.includes('away')) {\n      listenerTarget = document;\n\n      handler = e => {\n        // Don't do anything if the click came from the element or within it.\n        if (el.contains(e.target)) return; // Don't do anything if this element isn't currently visible.\n\n        if (el.offsetWidth < 1 && el.offsetHeight < 1) return; // Now that we are sure the element is visible, AND the click\n        // is from outside it, let's run the expression.\n\n        runListenerHandler(component, expression, e, extraVars);\n\n        if (modifiers.includes('once')) {\n          document.removeEventListener(event, handler, options);\n        }\n      };\n    } else {\n      listenerTarget = modifiers.includes('window') ? window : modifiers.includes('document') ? document : el;\n\n      handler = e => {\n        // Remove this global event handler if the element that declared it\n        // has been removed. It's now stale.\n        if (listenerTarget === window || listenerTarget === document) {\n          if (!document.body.contains(el)) {\n            listenerTarget.removeEventListener(event, handler, options);\n            return;\n          }\n        }\n\n        if (isKeyEvent(event)) {\n          if (isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers)) {\n            return;\n          }\n        }\n\n        if (modifiers.includes('prevent')) e.preventDefault();\n        if (modifiers.includes('stop')) e.stopPropagation(); // If the .self modifier isn't present, or if it is present and\n        // the target element matches the element we are registering the\n        // event on, run the handler\n\n        if (!modifiers.includes('self') || e.target === el) {\n          const returnValue = runListenerHandler(component, expression, e, extraVars);\n          returnValue.then(value => {\n            if (value === false) {\n              e.preventDefault();\n            } else {\n              if (modifiers.includes('once')) {\n                listenerTarget.removeEventListener(event, handler, options);\n              }\n            }\n          });\n        }\n      };\n    }\n\n    if (modifiers.includes('debounce')) {\n      let nextModifier = modifiers[modifiers.indexOf('debounce') + 1] || 'invalid-wait';\n      let wait = isNumeric(nextModifier.split('ms')[0]) ? Number(nextModifier.split('ms')[0]) : 250;\n      handler = debounce(handler, wait);\n    }\n\n    listenerTarget.addEventListener(event, handler, options);\n  }\n\n  function runListenerHandler(component, expression, e, extraVars) {\n    return component.evaluateCommandExpression(e.target, expression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        '$event': e\n      });\n    });\n  }\n\n  function isKeyEvent(event) {\n    return ['keydown', 'keyup'].includes(event);\n  }\n\n  function isListeningForASpecificKeyThatHasntBeenPressed(e, modifiers) {\n    let keyModifiers = modifiers.filter(i => {\n      return !['window', 'document', 'prevent', 'stop'].includes(i);\n    });\n\n    if (keyModifiers.includes('debounce')) {\n      let debounceIndex = keyModifiers.indexOf('debounce');\n      keyModifiers.splice(debounceIndex, isNumeric((keyModifiers[debounceIndex + 1] || 'invalid-wait').split('ms')[0]) ? 2 : 1);\n    } // If no modifier is specified, we'll call it a press.\n\n\n    if (keyModifiers.length === 0) return false; // If one is passed, AND it matches the key pressed, we'll call it a press.\n\n    if (keyModifiers.length === 1 && keyModifiers[0] === keyToModifier(e.key)) return false; // The user is listening for key combinations.\n\n    const systemKeyModifiers = ['ctrl', 'shift', 'alt', 'meta', 'cmd', 'super'];\n    const selectedSystemKeyModifiers = systemKeyModifiers.filter(modifier => keyModifiers.includes(modifier));\n    keyModifiers = keyModifiers.filter(i => !selectedSystemKeyModifiers.includes(i));\n\n    if (selectedSystemKeyModifiers.length > 0) {\n      const activelyPressedKeyModifiers = selectedSystemKeyModifiers.filter(modifier => {\n        // Alias \"cmd\" and \"super\" to \"meta\"\n        if (modifier === 'cmd' || modifier === 'super') modifier = 'meta';\n        return e[`${modifier}Key`];\n      }); // If all the modifiers selected are pressed, ...\n\n      if (activelyPressedKeyModifiers.length === selectedSystemKeyModifiers.length) {\n        // AND the remaining key is pressed as well. It's a press.\n        if (keyModifiers[0] === keyToModifier(e.key)) return false;\n      }\n    } // We'll call it NOT a valid keypress.\n\n\n    return true;\n  }\n\n  function keyToModifier(key) {\n    switch (key) {\n      case '/':\n        return 'slash';\n\n      case ' ':\n      case 'Spacebar':\n        return 'space';\n\n      default:\n        return key && kebabCase(key);\n    }\n  }\n\n  function registerModelListener(component, el, modifiers, expression, extraVars) {\n    // If the element we are binding to is a select, a radio, or checkbox\n    // we'll listen for the change event instead of the \"input\" event.\n    var event = el.tagName.toLowerCase() === 'select' || ['checkbox', 'radio'].includes(el.type) || modifiers.includes('lazy') ? 'change' : 'input';\n    const listenerExpression = `${expression} = rightSideOfExpression($event, ${expression})`;\n    registerListener(component, el, event, modifiers, listenerExpression, () => {\n      return _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        rightSideOfExpression: generateModelAssignmentFunction(el, modifiers, expression)\n      });\n    });\n  }\n\n  function generateModelAssignmentFunction(el, modifiers, expression) {\n    if (el.type === 'radio') {\n      // Radio buttons only work properly when they share a name attribute.\n      // People might assume we take care of that for them, because\n      // they already set a shared \"x-model\" attribute.\n      if (!el.hasAttribute('name')) el.setAttribute('name', expression);\n    }\n\n    return (event, currentValue) => {\n      // Check for event.detail due to an issue where IE11 handles other events as a CustomEvent.\n      if (event instanceof CustomEvent && event.detail) {\n        return event.detail;\n      } else if (el.type === 'checkbox') {\n        // If the data we are binding to is an array, toggle its value inside the array.\n        if (Array.isArray(currentValue)) {\n          const newValue = modifiers.includes('number') ? safeParseNumber(event.target.value) : event.target.value;\n          return event.target.checked ? currentValue.concat([newValue]) : currentValue.filter(el => !checkedAttrLooseCompare(el, newValue));\n        } else {\n          return event.target.checked;\n        }\n      } else if (el.tagName.toLowerCase() === 'select' && el.multiple) {\n        return modifiers.includes('number') ? Array.from(event.target.selectedOptions).map(option => {\n          const rawValue = option.value || option.text;\n          return safeParseNumber(rawValue);\n        }) : Array.from(event.target.selectedOptions).map(option => {\n          return option.value || option.text;\n        });\n      } else {\n        const rawValue = event.target.value;\n        return modifiers.includes('number') ? safeParseNumber(rawValue) : modifiers.includes('trim') ? rawValue.trim() : rawValue;\n      }\n    };\n  }\n\n  function safeParseNumber(rawValue) {\n    const number = rawValue ? parseFloat(rawValue) : null;\n    return isNumeric(number) ? number : rawValue;\n  }\n\n  /**\n   * Copyright (C) 2017 salesforce.com, inc.\n   */\n  const { isArray } = Array;\n  const { getPrototypeOf, create: ObjectCreate, defineProperty: ObjectDefineProperty, defineProperties: ObjectDefineProperties, isExtensible, getOwnPropertyDescriptor, getOwnPropertyNames, getOwnPropertySymbols, preventExtensions, hasOwnProperty, } = Object;\n  const { push: ArrayPush, concat: ArrayConcat, map: ArrayMap, } = Array.prototype;\n  function isUndefined(obj) {\n      return obj === undefined;\n  }\n  function isFunction(obj) {\n      return typeof obj === 'function';\n  }\n  function isObject(obj) {\n      return typeof obj === 'object';\n  }\n  const proxyToValueMap = new WeakMap();\n  function registerProxy(proxy, value) {\n      proxyToValueMap.set(proxy, value);\n  }\n  const unwrap = (replicaOrAny) => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\n  function wrapValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getProxy(value) : value;\n  }\n  /**\n   * Unwrap property descriptors will set value on original descriptor\n   * We only need to unwrap if value is specified\n   * @param descriptor external descrpitor provided to define new property on original value\n   */\n  function unwrapDescriptor(descriptor) {\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = unwrap(descriptor.value);\n      }\n      return descriptor;\n  }\n  function lockShadowTarget(membrane, shadowTarget, originalTarget) {\n      const targetKeys = ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      targetKeys.forEach((key) => {\n          let descriptor = getOwnPropertyDescriptor(originalTarget, key);\n          // We do not need to wrap the descriptor if configurable\n          // Because we can deal with wrapping it when user goes through\n          // Get own property descriptor. There is also a chance that this descriptor\n          // could change sometime in the future, so we can defer wrapping\n          // until we need to\n          if (!descriptor.configurable) {\n              descriptor = wrapDescriptor(membrane, descriptor, wrapValue);\n          }\n          ObjectDefineProperty(shadowTarget, key, descriptor);\n      });\n      preventExtensions(shadowTarget);\n  }\n  class ReactiveProxyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          const oldValue = originalTarget[key];\n          if (oldValue !== value) {\n              originalTarget[key] = value;\n              valueMutated(originalTarget, key);\n          }\n          else if (key === 'length' && isArray(originalTarget)) {\n              // fix for issue #236: push will add the new index, and by the time length\n              // is updated, the internal length is already equal to the new length value\n              // therefore, the oldValue is equal to the value. This is the forking logic\n              // to support this use case.\n              valueMutated(originalTarget, key);\n          }\n          return true;\n      }\n      deleteProperty(shadowTarget, key) {\n          const { originalTarget, membrane: { valueMutated } } = this;\n          delete originalTarget[key];\n          valueMutated(originalTarget, key);\n          return true;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      isExtensible(shadowTarget) {\n          const shadowIsExtensible = isExtensible(shadowTarget);\n          if (!shadowIsExtensible) {\n              return shadowIsExtensible;\n          }\n          const { originalTarget, membrane } = this;\n          const targetIsExtensible = isExtensible(originalTarget);\n          if (!targetIsExtensible) {\n              lockShadowTarget(membrane, shadowTarget, originalTarget);\n          }\n          return targetIsExtensible;\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getPrototypeOf(shadowTarget) {\n          const { originalTarget } = this;\n          return getPrototypeOf(originalTarget);\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = this.membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value, setter or getter (if available) cannot observe\n          // mutations, just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapValue);\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          const { originalTarget, membrane } = this;\n          lockShadowTarget(membrane, shadowTarget, originalTarget);\n          preventExtensions(originalTarget);\n          return true;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          const { originalTarget, membrane } = this;\n          const { valueMutated } = membrane;\n          const { configurable } = descriptor;\n          // We have to check for value in descriptor\n          // because Object.freeze(proxy) calls this method\n          // with only { configurable: false, writeable: false }\n          // Additionally, method will only be called with writeable:false\n          // if the descriptor has a value, as opposed to getter/setter\n          // So we can just check if writable is present and then see if\n          // value is present. This eliminates getter and setter descriptors\n          if (hasOwnProperty.call(descriptor, 'writable') && !hasOwnProperty.call(descriptor, 'value')) {\n              const originalDescriptor = getOwnPropertyDescriptor(originalTarget, key);\n              descriptor.value = originalDescriptor.value;\n          }\n          ObjectDefineProperty(originalTarget, key, unwrapDescriptor(descriptor));\n          if (configurable === false) {\n              ObjectDefineProperty(shadowTarget, key, wrapDescriptor(membrane, descriptor, wrapValue));\n          }\n          valueMutated(originalTarget, key);\n          return true;\n      }\n  }\n\n  function wrapReadOnlyValue(membrane, value) {\n      return membrane.valueIsObservable(value) ? membrane.getReadOnlyProxy(value) : value;\n  }\n  class ReadOnlyHandler {\n      constructor(membrane, value) {\n          this.originalTarget = value;\n          this.membrane = membrane;\n      }\n      get(shadowTarget, key) {\n          const { membrane, originalTarget } = this;\n          const value = originalTarget[key];\n          const { valueObserved } = membrane;\n          valueObserved(originalTarget, key);\n          return membrane.getReadOnlyProxy(value);\n      }\n      set(shadowTarget, key, value) {\n          return false;\n      }\n      deleteProperty(shadowTarget, key) {\n          return false;\n      }\n      apply(shadowTarget, thisArg, argArray) {\n          /* No op */\n      }\n      construct(target, argArray, newTarget) {\n          /* No op */\n      }\n      has(shadowTarget, key) {\n          const { originalTarget, membrane: { valueObserved } } = this;\n          valueObserved(originalTarget, key);\n          return key in originalTarget;\n      }\n      ownKeys(shadowTarget) {\n          const { originalTarget } = this;\n          return ArrayConcat.call(getOwnPropertyNames(originalTarget), getOwnPropertySymbols(originalTarget));\n      }\n      setPrototypeOf(shadowTarget, prototype) {\n      }\n      getOwnPropertyDescriptor(shadowTarget, key) {\n          const { originalTarget, membrane } = this;\n          const { valueObserved } = membrane;\n          // keys looked up via hasOwnProperty need to be reactive\n          valueObserved(originalTarget, key);\n          let desc = getOwnPropertyDescriptor(originalTarget, key);\n          if (isUndefined(desc)) {\n              return desc;\n          }\n          const shadowDescriptor = getOwnPropertyDescriptor(shadowTarget, key);\n          if (!isUndefined(shadowDescriptor)) {\n              return shadowDescriptor;\n          }\n          // Note: by accessing the descriptor, the key is marked as observed\n          // but access to the value or getter (if available) cannot be observed,\n          // just like regular methods, in which case we just do nothing.\n          desc = wrapDescriptor(membrane, desc, wrapReadOnlyValue);\n          if (hasOwnProperty.call(desc, 'set')) {\n              desc.set = undefined; // readOnly membrane does not allow setters\n          }\n          if (!desc.configurable) {\n              // If descriptor from original target is not configurable,\n              // We must copy the wrapped descriptor over to the shadow target.\n              // Otherwise, proxy will throw an invariant error.\n              // This is our last chance to lock the value.\n              // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor#Invariants\n              ObjectDefineProperty(shadowTarget, key, desc);\n          }\n          return desc;\n      }\n      preventExtensions(shadowTarget) {\n          return false;\n      }\n      defineProperty(shadowTarget, key, descriptor) {\n          return false;\n      }\n  }\n  function createShadowTarget(value) {\n      let shadowTarget = undefined;\n      if (isArray(value)) {\n          shadowTarget = [];\n      }\n      else if (isObject(value)) {\n          shadowTarget = {};\n      }\n      return shadowTarget;\n  }\n  const ObjectDotPrototype = Object.prototype;\n  function defaultValueIsObservable(value) {\n      // intentionally checking for null\n      if (value === null) {\n          return false;\n      }\n      // treat all non-object types, including undefined, as non-observable values\n      if (typeof value !== 'object') {\n          return false;\n      }\n      if (isArray(value)) {\n          return true;\n      }\n      const proto = getPrototypeOf(value);\n      return (proto === ObjectDotPrototype || proto === null || getPrototypeOf(proto) === null);\n  }\n  const defaultValueObserved = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueMutated = (obj, key) => {\n      /* do nothing */\n  };\n  const defaultValueDistortion = (value) => value;\n  function wrapDescriptor(membrane, descriptor, getValue) {\n      const { set, get } = descriptor;\n      if (hasOwnProperty.call(descriptor, 'value')) {\n          descriptor.value = getValue(membrane, descriptor.value);\n      }\n      else {\n          if (!isUndefined(get)) {\n              descriptor.get = function () {\n                  // invoking the original getter with the original target\n                  return getValue(membrane, get.call(unwrap(this)));\n              };\n          }\n          if (!isUndefined(set)) {\n              descriptor.set = function (value) {\n                  // At this point we don't have a clear indication of whether\n                  // or not a valid mutation will occur, we don't have the key,\n                  // and we are not sure why and how they are invoking this setter.\n                  // Nevertheless we preserve the original semantics by invoking the\n                  // original setter with the original target and the unwrapped value\n                  set.call(unwrap(this), membrane.unwrapProxy(value));\n              };\n          }\n      }\n      return descriptor;\n  }\n  class ReactiveMembrane {\n      constructor(options) {\n          this.valueDistortion = defaultValueDistortion;\n          this.valueMutated = defaultValueMutated;\n          this.valueObserved = defaultValueObserved;\n          this.valueIsObservable = defaultValueIsObservable;\n          this.objectGraph = new WeakMap();\n          if (!isUndefined(options)) {\n              const { valueDistortion, valueMutated, valueObserved, valueIsObservable } = options;\n              this.valueDistortion = isFunction(valueDistortion) ? valueDistortion : defaultValueDistortion;\n              this.valueMutated = isFunction(valueMutated) ? valueMutated : defaultValueMutated;\n              this.valueObserved = isFunction(valueObserved) ? valueObserved : defaultValueObserved;\n              this.valueIsObservable = isFunction(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n          }\n      }\n      getProxy(value) {\n          const unwrappedValue = unwrap(value);\n          const distorted = this.valueDistortion(unwrappedValue);\n          if (this.valueIsObservable(distorted)) {\n              const o = this.getReactiveState(unwrappedValue, distorted);\n              // when trying to extract the writable version of a readonly\n              // we return the readonly.\n              return o.readOnly === value ? value : o.reactive;\n          }\n          return distorted;\n      }\n      getReadOnlyProxy(value) {\n          value = unwrap(value);\n          const distorted = this.valueDistortion(value);\n          if (this.valueIsObservable(distorted)) {\n              return this.getReactiveState(value, distorted).readOnly;\n          }\n          return distorted;\n      }\n      unwrapProxy(p) {\n          return unwrap(p);\n      }\n      getReactiveState(value, distortedValue) {\n          const { objectGraph, } = this;\n          let reactiveState = objectGraph.get(distortedValue);\n          if (reactiveState) {\n              return reactiveState;\n          }\n          const membrane = this;\n          reactiveState = {\n              get reactive() {\n                  const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue);\n                  // caching the reactive proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'reactive', { value: proxy });\n                  return proxy;\n              },\n              get readOnly() {\n                  const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue);\n                  // caching the readOnly proxy after the first time it is accessed\n                  const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n                  registerProxy(proxy, value);\n                  ObjectDefineProperty(this, 'readOnly', { value: proxy });\n                  return proxy;\n              }\n          };\n          objectGraph.set(distortedValue, reactiveState);\n          return reactiveState;\n      }\n  }\n  /** version: 0.26.0 */\n\n  function wrap(data, mutationCallback) {\n\n    let membrane = new ReactiveMembrane({\n      valueMutated(target, key) {\n        mutationCallback(target, key);\n      }\n\n    });\n    return {\n      data: membrane.getProxy(data),\n      membrane: membrane\n    };\n  }\n  function unwrap$1(membrane, observable) {\n    let unwrappedData = membrane.unwrapProxy(observable);\n    let copy = {};\n    Object.keys(unwrappedData).forEach(key => {\n      if (['$el', '$refs', '$nextTick', '$watch'].includes(key)) return;\n      copy[key] = unwrappedData[key];\n    });\n    return copy;\n  }\n\n  class Component {\n    constructor(el, componentForClone = null) {\n      this.$el = el;\n      const dataAttr = this.$el.getAttribute('x-data');\n      const dataExpression = dataAttr === '' ? '{}' : dataAttr;\n      const initExpression = this.$el.getAttribute('x-init');\n      let dataExtras = {\n        $el: this.$el\n      };\n      let canonicalComponentElementReference = componentForClone ? componentForClone.$el : this.$el;\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(dataExtras, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference);\n          }\n        });\n      });\n      this.unobservedData = componentForClone ? componentForClone.getUnobservedData() : saferEval(el, dataExpression, dataExtras);\n      // Construct a Proxy-based observable. This will be used to handle reactivity.\n\n      let {\n        membrane,\n        data\n      } = this.wrapDataInObservable(this.unobservedData);\n      this.$data = data;\n      this.membrane = membrane; // After making user-supplied data methods reactive, we can now add\n      // our magic properties to the original data for access.\n\n      this.unobservedData.$el = this.$el;\n      this.unobservedData.$refs = this.getRefsProxy();\n      this.nextTickStack = [];\n\n      this.unobservedData.$nextTick = callback => {\n        this.nextTickStack.push(callback);\n      };\n\n      this.watchers = {};\n\n      this.unobservedData.$watch = (property, callback) => {\n        if (!this.watchers[property]) this.watchers[property] = [];\n        this.watchers[property].push(callback);\n      };\n      /* MODERN-ONLY:START */\n      // We remove this piece of code from the legacy build.\n      // In IE11, we have already defined our helpers at this point.\n      // Register custom magic properties.\n\n\n      Object.entries(Alpine.magicProperties).forEach(([name, callback]) => {\n        Object.defineProperty(this.unobservedData, `$${name}`, {\n          get: function get() {\n            return callback(canonicalComponentElementReference, this.$el);\n          }\n        });\n      });\n      /* MODERN-ONLY:END */\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement;\n      componentForClone || Alpine.onBeforeComponentInitializeds.forEach(callback => callback(this));\n      var initReturnedCallback; // If x-init is present AND we aren't cloning (skip x-init on clone)\n\n      if (initExpression && !componentForClone) {\n        // We want to allow data manipulation, but not trigger DOM updates just yet.\n        // We haven't even initialized the elements with their Alpine bindings. I mean c'mon.\n        this.pauseReactivity = true;\n        initReturnedCallback = this.evaluateReturnExpression(this.$el, initExpression);\n        this.pauseReactivity = false;\n      } // Register all our listeners and set all our attribute bindings.\n      // If we're cloning a component, the third parameter ensures no duplicate\n      // event listeners are registered (the mutation observer will take care of them)\n\n\n      this.initializeElements(this.$el, () => {}, componentForClone); // Use mutation observer to detect new elements being added within this component at run-time.\n      // Alpine's just so darn flexible amirite?\n\n      this.listenForNewElementsToInitialize();\n\n      if (typeof initReturnedCallback === 'function') {\n        // Run the callback returned from the \"x-init\" hook to allow the user to do stuff after\n        // Alpine's got it's grubby little paws all over everything.\n        initReturnedCallback.call(this.$data);\n      }\n\n      componentForClone || setTimeout(() => {\n        Alpine.onComponentInitializeds.forEach(callback => callback(this));\n      }, 0);\n    }\n\n    getUnobservedData() {\n      return unwrap$1(this.membrane, this.$data);\n    }\n\n    wrapDataInObservable(data) {\n      var self = this;\n      let updateDom = debounce(function () {\n        self.updateElements(self.$el);\n      }, 0);\n      return wrap(data, (target, key) => {\n        if (self.watchers[key]) {\n          // If there's a watcher for this specific key, run it.\n          self.watchers[key].forEach(callback => callback(target[key]));\n        } else if (Array.isArray(target)) {\n          // Arrays are special cases, if any of the items change, we consider the array as mutated.\n          Object.keys(self.watchers).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // Ignore length mutations since they would result in duplicate calls.\n            // For example, when calling push, we would get a mutation for the item's key\n            // and a second mutation for the length property.\n\n            if (key === 'length') return;\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData[part])) {\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } else {\n          // Let's walk through the watchers with \"dot-notation\" (foo.bar) and see\n          // if this mutation fits any of them.\n          Object.keys(self.watchers).filter(i => i.includes('.')).forEach(fullDotNotationKey => {\n            let dotNotationParts = fullDotNotationKey.split('.'); // If this dot-notation watcher's last \"part\" doesn't match the current\n            // key, then skip it early for performance reasons.\n\n            if (key !== dotNotationParts[dotNotationParts.length - 1]) return; // Now, walk through the dot-notation \"parts\" recursively to find\n            // a match, and call the watcher if one's found.\n\n            dotNotationParts.reduce((comparisonData, part) => {\n              if (Object.is(target, comparisonData)) {\n                // Run the watchers.\n                self.watchers[fullDotNotationKey].forEach(callback => callback(target[key]));\n              }\n\n              return comparisonData[part];\n            }, self.unobservedData);\n          });\n        } // Don't react to data changes for cases like the `x-created` hook.\n\n\n        if (self.pauseReactivity) return;\n        updateDom();\n      });\n    }\n\n    walkAndSkipNestedComponents(el, callback, initializeComponentCallback = () => {}) {\n      walk(el, el => {\n        // We've hit a component.\n        if (el.hasAttribute('x-data')) {\n          // If it's not the current one.\n          if (!el.isSameNode(this.$el)) {\n            // Initialize it if it's not.\n            if (!el.__x) initializeComponentCallback(el); // Now we'll let that sub-component deal with itself.\n\n            return false;\n          }\n        }\n\n        return callback(el);\n      });\n    }\n\n    initializeElements(rootEl, extraVars = () => {}, componentForClone = false) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop\n        if (el.__x_for_key !== undefined) return false; // Don't touch spawns from if directives\n\n        if (el.__x_inserted_me !== undefined) return false;\n        this.initializeElement(el, extraVars, componentForClone ? false : true);\n      }, el => {\n        if (!componentForClone) el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    initializeElement(el, extraVars, shouldRegisterListeners = true) {\n      // To support class attribute merging, we have to know what the element's\n      // original class attribute looked like for reference.\n      if (el.hasAttribute('class') && getXAttrs(el, this).length > 0) {\n        el.__x_original_classes = convertClassStringToArray(el.getAttribute('class'));\n      }\n\n      shouldRegisterListeners && this.registerListeners(el, extraVars);\n      this.resolveBoundAttributes(el, true, extraVars);\n    }\n\n    updateElements(rootEl, extraVars = () => {}) {\n      this.walkAndSkipNestedComponents(rootEl, el => {\n        // Don't touch spawns from for loop (and check if the root is actually a for loop in a parent, don't skip it.)\n        if (el.__x_for_key !== undefined && !el.isSameNode(this.$el)) return false;\n        this.updateElement(el, extraVars);\n      }, el => {\n        el.__x = new Component(el);\n      });\n      this.executeAndClearRemainingShowDirectiveStack();\n      this.executeAndClearNextTickStack(rootEl);\n    }\n\n    executeAndClearNextTickStack(el) {\n      // Skip spawns from alpine directives\n      if (el === this.$el && this.nextTickStack.length > 0) {\n        // We run the tick stack after the next frame to allow any\n        // running transitions to pass the initial show stage.\n        requestAnimationFrame(() => {\n          while (this.nextTickStack.length > 0) {\n            this.nextTickStack.shift()();\n          }\n        });\n      }\n    }\n\n    executeAndClearRemainingShowDirectiveStack() {\n      // The goal here is to start all the x-show transitions\n      // and build a nested promise chain so that elements\n      // only hide when the children are finished hiding.\n      this.showDirectiveStack.reverse().map(handler => {\n        return new Promise((resolve, reject) => {\n          handler(resolve, reject);\n        });\n      }).reduce((promiseChain, promise) => {\n        return promiseChain.then(() => {\n          return promise.then(finishElement => {\n            finishElement();\n          });\n        });\n      }, Promise.resolve(() => {})).catch(e => {\n        if (e !== TRANSITION_CANCELLED) throw e;\n      }); // We've processed the handler stack. let's clear it.\n\n      this.showDirectiveStack = [];\n      this.showDirectiveLastElement = undefined;\n    }\n\n    updateElement(el, extraVars) {\n      this.resolveBoundAttributes(el, false, extraVars);\n    }\n\n    registerListeners(el, extraVars) {\n      getXAttrs(el, this).forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'on':\n            registerListener(this, el, value, modifiers, expression, extraVars);\n            break;\n\n          case 'model':\n            registerModelListener(this, el, modifiers, expression, extraVars);\n            break;\n        }\n      });\n    }\n\n    resolveBoundAttributes(el, initialUpdate = false, extraVars) {\n      let attrs = getXAttrs(el, this);\n      attrs.forEach(({\n        type,\n        value,\n        modifiers,\n        expression\n      }) => {\n        switch (type) {\n          case 'model':\n            handleAttributeBindingDirective(this, el, 'value', expression, extraVars, type, modifiers);\n            break;\n\n          case 'bind':\n            // The :key binding on an x-for is special, ignore it.\n            if (el.tagName.toLowerCase() === 'template' && value === 'key') return;\n            handleAttributeBindingDirective(this, el, value, expression, extraVars, type, modifiers);\n            break;\n\n          case 'text':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleTextDirective(el, output, expression);\n            break;\n\n          case 'html':\n            handleHtmlDirective(this, el, expression, extraVars);\n            break;\n\n          case 'show':\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleShowDirective(this, el, output, modifiers, initialUpdate);\n            break;\n\n          case 'if':\n            // If this element also has x-for on it, don't process x-if.\n            // We will let the \"x-for\" directive handle the \"if\"ing.\n            if (attrs.some(i => i.type === 'for')) return;\n            var output = this.evaluateReturnExpression(el, expression, extraVars);\n            handleIfDirective(this, el, output, initialUpdate, extraVars);\n            break;\n\n          case 'for':\n            handleForDirective(this, el, expression, initialUpdate, extraVars);\n            break;\n\n          case 'cloak':\n            el.removeAttribute('x-cloak');\n            break;\n        }\n      });\n    }\n\n    evaluateReturnExpression(el, expression, extraVars = () => {}) {\n      return saferEval(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    evaluateCommandExpression(el, expression, extraVars = () => {}) {\n      return saferEvalNoReturn(el, expression, this.$data, _objectSpread2(_objectSpread2({}, extraVars()), {}, {\n        $dispatch: this.getDispatchFunction(el)\n      }));\n    }\n\n    getDispatchFunction(el) {\n      return (event, detail = {}) => {\n        el.dispatchEvent(new CustomEvent(event, {\n          detail,\n          bubbles: true\n        }));\n      };\n    }\n\n    listenForNewElementsToInitialize() {\n      const targetNode = this.$el;\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        for (let i = 0; i < mutations.length; i++) {\n          // Filter out mutations triggered from child components.\n          const closestParentComponent = mutations[i].target.closest('[x-data]');\n          if (!(closestParentComponent && closestParentComponent.isSameNode(this.$el))) continue;\n\n          if (mutations[i].type === 'attributes' && mutations[i].attributeName === 'x-data') {\n            const xAttr = mutations[i].target.getAttribute('x-data') || '{}';\n            const rawData = saferEval(this.$el, xAttr, {\n              $el: this.$el\n            });\n            Object.keys(rawData).forEach(key => {\n              if (this.$data[key] !== rawData[key]) {\n                this.$data[key] = rawData[key];\n              }\n            });\n          }\n\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              if (node.nodeType !== 1 || node.__x_inserted_me) return;\n\n              if (node.matches('[x-data]') && !node.__x) {\n                node.__x = new Component(node);\n                return;\n              }\n\n              this.initializeElements(node);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    }\n\n    getRefsProxy() {\n      var self = this;\n      var refObj = {};\n      // One of the goals of this is to not hold elements in memory, but rather re-evaluate\n      // the DOM when the system needs something from it. This way, the framework is flexible and\n      // friendly to outside DOM changes from libraries like Vue/Livewire.\n      // For this reason, I'm using an \"on-demand\" proxy to fake a \"$refs\" object.\n\n      return new Proxy(refObj, {\n        get(object, property) {\n          if (property === '$isAlpineProxy') return true;\n          var ref; // We can't just query the DOM because it's hard to filter out refs in\n          // nested components.\n\n          self.walkAndSkipNestedComponents(self.$el, el => {\n            if (el.hasAttribute('x-ref') && el.getAttribute('x-ref') === property) {\n              ref = el;\n            }\n          });\n          return ref;\n        }\n\n      });\n    }\n\n  }\n\n  const Alpine = {\n    version: \"2.8.2\",\n    pauseMutationObserver: false,\n    magicProperties: {},\n    onComponentInitializeds: [],\n    onBeforeComponentInitializeds: [],\n    ignoreFocusedForValueBinding: false,\n    start: async function start() {\n      if (!isTesting()) {\n        await domReady();\n      }\n\n      this.discoverComponents(el => {\n        this.initializeComponent(el);\n      }); // It's easier and more performant to just support Turbolinks than listen\n      // to MutationObserver mutations at the document level.\n\n      document.addEventListener(\"turbolinks:load\", () => {\n        this.discoverUninitializedComponents(el => {\n          this.initializeComponent(el);\n        });\n      });\n      this.listenForNewUninitializedComponentsAtRunTime();\n    },\n    discoverComponents: function discoverComponents(callback) {\n      const rootEls = document.querySelectorAll('[x-data]');\n      rootEls.forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    discoverUninitializedComponents: function discoverUninitializedComponents(callback, el = null) {\n      const rootEls = (el || document).querySelectorAll('[x-data]');\n      Array.from(rootEls).filter(el => el.__x === undefined).forEach(rootEl => {\n        callback(rootEl);\n      });\n    },\n    listenForNewUninitializedComponentsAtRunTime: function listenForNewUninitializedComponentsAtRunTime() {\n      const targetNode = document.querySelector('body');\n      const observerOptions = {\n        childList: true,\n        attributes: true,\n        subtree: true\n      };\n      const observer = new MutationObserver(mutations => {\n        if (this.pauseMutationObserver) return;\n\n        for (let i = 0; i < mutations.length; i++) {\n          if (mutations[i].addedNodes.length > 0) {\n            mutations[i].addedNodes.forEach(node => {\n              // Discard non-element nodes (like line-breaks)\n              if (node.nodeType !== 1) return; // Discard any changes happening within an existing component.\n              // They will take care of themselves.\n\n              if (node.parentElement && node.parentElement.closest('[x-data]')) return;\n              this.discoverUninitializedComponents(el => {\n                this.initializeComponent(el);\n              }, node.parentElement);\n            });\n          }\n        }\n      });\n      observer.observe(targetNode, observerOptions);\n    },\n    initializeComponent: function initializeComponent(el) {\n      if (!el.__x) {\n        // Wrap in a try/catch so that we don't prevent other components\n        // from initializing when one component contains an error.\n        try {\n          el.__x = new Component(el);\n        } catch (error) {\n          setTimeout(() => {\n            throw error;\n          }, 0);\n        }\n      }\n    },\n    clone: function clone(component, newEl) {\n      if (!newEl.__x) {\n        newEl.__x = new Component(newEl, component);\n      }\n    },\n    addMagicProperty: function addMagicProperty(name, callback) {\n      this.magicProperties[name] = callback;\n    },\n    onComponentInitialized: function onComponentInitialized(callback) {\n      this.onComponentInitializeds.push(callback);\n    },\n    onBeforeComponentInitialized: function onBeforeComponentInitialized(callback) {\n      this.onBeforeComponentInitializeds.push(callback);\n    }\n  };\n\n  if (!isTesting()) {\n    window.Alpine = Alpine;\n\n    if (window.deferLoadingAlpine) {\n      window.deferLoadingAlpine(function () {\n        window.Alpine.start();\n      });\n    } else {\n      window.Alpine.start();\n    }\n  }\n\n  return Alpine;\n\n})));\n"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","arrayUnique","array","Array","from","Set","isTesting","navigator","userAgent","includes","checkedAttrLooseCompare","valueA","valueB","warnIfMalformedTemplate","el","directive","tagName","toLowerCase","console","warn","content","childElementCount","camelCase","subject","replace","match","char","toUpperCase","walk","callback","node","firstElementChild","nextElementSibling","debounce","func","wait","timeout","context","this","args","later","clearTimeout","setTimeout","handleError","expression","error","assign","tryCatch","cb","Promise","catch","e","saferEval","dataContext","additionalHelperVariables","call","Function","values","xAttrRE","isXAttr","attr","name","replaceAtAndColonWithStandardSyntax","test","getXAttrs","component","type","directives","attributes","map","parseHtmlAttribute","spreadDirective","spreadObject","$data","concat","entries","directiveOrder","sort","a","b","typeA","indexOf","typeB","sortDirectives","normalizedName","typeMatch","valueMatch","modifiers","startsWith","convertClassStringToArray","classList","filterFn","Boolean","split","TRANSITION_TYPE_IN","TRANSITION_TYPE_OUT","TRANSITION_CANCELLED","transitionIn","show","reject","forceSkip","__x_transition","attrs","showAttr","settingBothSidesOfTransition","index","showCallback","transitionHelper","duration","modifierValue","origin","first","opacity","scale","second","transitionHelperIn","some","transitionClasses","ensureStringExpression","find","transitionClassesIn","transitionOut","hide","hideCallback","transitionHelperOut","transitionClassesOut","fallback","rawValue","isNumeric","join","hook1","hook2","styleValues","cancel","opacityCache","style","transformCache","transform","transformOriginCache","transformOrigin","noModifiers","transitionOpacity","transitionScale","stages","start","during","transitionProperty","trim","transitionDuration","transitionTimingFunction","end","cleanup","transition","evaluateReturnExpression","classesDuring","classesStart","classesEnd","originalClasses","__x_original_classes","add","remove","finish","once","isConnected","nextFrame","requestAnimationFrame","Number","getComputedStyle","animationDuration","isArray","isNaN","called","handleForDirective","templateEl","initialUpdate","extraVars","iteratorNames","forIteratorRE","stripParensRE","forAliasRE","inMatch","String","res","items","item","iteratorMatch","collection","parseForExpression","ifAttribute","evaluateItemsAndReturnEmptyIfXIfIsPresentAndFalseOnElement","currentEl","iterationScopeVariables","scopeVariables","getIterationScopeVariables","currentKey","bindKeyAttribute","generateKeyForIteration","nextEl","undefined","__x_for_key","tmpNextEl","parentElement","insertBefore","lookAheadForMatchingKeyedElementAndMoveItIfFound","__x_for","updateElements","clone","document","importNode","addElementInLoopAfterCurrentEl","initializeElements","nextElementFromOldLoop","nextElementFromOldLoopImmutable","nextSibling","removeAnyLeftOverElementsFromPreviousUpdate","handleAttributeBindingDirective","attrName","attrType","Alpine","ignoreFocusedForValueBinding","activeElement","isSameNode","checked","val","arrayWrappedValue","options","option","selected","text","updateSelect","setAttribute","classNames","className","newClasses","removeAttribute","isBooleanAttr","setIfChanged","getAttribute","registerListener","event","passive","handler","listenerTarget","contains","offsetWidth","offsetHeight","runListenerHandler","removeEventListener","window","body","isKeyEvent","keyModifiers","debounceIndex","splice","keyToModifier","selectedSystemKeyModifiers","modifier","isListeningForASpecificKeyThatHasntBeenPressed","preventDefault","stopPropagation","then","nextModifier","addEventListener","evaluateCommandExpression","generateModelAssignmentFunction","hasAttribute","currentValue","CustomEvent","detail","newValue","safeParseNumber","multiple","selectedOptions","number","parseFloat","getPrototypeOf","create","ObjectCreate","ObjectDefineProperty","ObjectDefineProperties","isExtensible","getOwnPropertyNames","preventExtensions","hasOwnProperty","ArrayPush","ArrayConcat","ArrayMap","prototype","isUndefined","isFunction","proxyToValueMap","WeakMap","registerProxy","proxy","set","unwrap","replicaOrAny","get","wrapValue","membrane","valueIsObservable","getProxy","lockShadowTarget","shadowTarget","originalTarget","descriptor","wrapDescriptor","ReactiveProxyHandler","constructor","valueObserved","valueMutated","deleteProperty","thisArg","argArray","construct","newTarget","has","shadowIsExtensible","targetIsExtensible","setPrototypeOf","desc","shadowDescriptor","originalDescriptor","unwrapDescriptor","wrapReadOnlyValue","getReadOnlyProxy","ReadOnlyHandler","createShadowTarget","ObjectDotPrototype","defaultValueIsObservable","proto","defaultValueObserved","defaultValueMutated","defaultValueDistortion","getValue","unwrapProxy","ReactiveMembrane","valueDistortion","objectGraph","unwrappedValue","distorted","o","getReactiveState","readOnly","reactive","p","distortedValue","reactiveState","reactiveHandler","Proxy","readOnlyHandler","Component","componentForClone","$el","dataAttr","dataExpression","initExpression","dataExtras","canonicalComponentElementReference","magicProperties","unobservedData","getUnobservedData","data","wrapDataInObservable","initReturnedCallback","$refs","getRefsProxy","nextTickStack","$nextTick","watchers","$watch","property","showDirectiveStack","showDirectiveLastElement","onBeforeComponentInitializeds","pauseReactivity","listenForNewElementsToInitialize","onComponentInitializeds","observable","unwrappedData","copy","unwrap$1","self","updateDom","mutationCallback","wrap","fullDotNotationKey","dotNotationParts","reduce","comparisonData","part","is","walkAndSkipNestedComponents","initializeComponentCallback","__x","rootEl","__x_inserted_me","initializeElement","executeAndClearRemainingShowDirectiveStack","executeAndClearNextTickStack","shouldRegisterListeners","registerListeners","resolveBoundAttributes","updateElement","shift","reverse","resolve","promiseChain","promise","finishElement","rightSideOfExpression","registerModelListener","output","textContent","handleTextDirective","innerHTML","handleHtmlDirective","display","__x_is_shown","removeProperty","handle","handleShowDirective","expressionResult","elementHasAlreadyBeenAdded","handleIfDirective","$dispatch","getDispatchFunction","AsyncFunction","async","methodReference","saferEvalNoReturn","dispatchEvent","bubbles","targetNode","MutationObserver","mutations","closestParentComponent","closest","attributeName","xAttr","rawData","addedNodes","nodeType","matches","observe","childList","subtree","ref","version","pauseMutationObserver","readyState","discoverComponents","initializeComponent","discoverUninitializedComponents","listenForNewUninitializedComponentsAtRunTime","querySelectorAll","rootEls","querySelector","newEl","addMagicProperty","onComponentInitialized","onBeforeComponentInitialized","deferLoadingAlpine","factory"],"sourceRoot":""}